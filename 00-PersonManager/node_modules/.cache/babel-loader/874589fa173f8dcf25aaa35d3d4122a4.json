{"ast":null,"code":"var _jsxFileName = \"/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/components/Persons/Person/Person.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './Person.css';\nimport withClass from '../../../hoc/withClass';\n\nclass Person extends Component {\n  componentDidMount() {\n    console.log('[Person.js] componentDidMount'); // This will give focus to the first input in the element.\n    //document.querySelector('input').focus();\n\n    this.inputElement.focus();\n  }\n\n  render() {\n    console.log('[Person.js] rendering...');\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: this.props.clicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"I'm \", this.props.name, \" and I am \", this.props.age, \" years old!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.children), React.createElement(\"input\", {\n      ref: inputEl => {\n        this.inputElement = inputEl;\n      },\n      type: \"text\",\n      onChange: this.props.changed,\n      value: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nPerson.propTypes = {\n  click: PropTypes.func,\n  name: PropTypes.string,\n  age: PropTypes.number,\n  changed: PropTypes.func\n};\nexport default withClass(Person, classes.Person);\n/*\nclass Person extends Component {\n    render() {\n        return (\n            <div>\n                <p>I'm {this.props.name} and I am {this.props.age} years old!</p>\n                <p>{this.props.children}</p>\n            </div>\n        )\n    \n    }\n}\nexport default Person;\n*/","map":{"version":3,"sources":["/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/components/Persons/Person/Person.js"],"names":["React","Component","Fragment","PropTypes","classes","withClass","Person","componentDidMount","console","log","inputElement","focus","render","props","clicked","name","age","children","inputEl","changed","propTypes","click","func","string","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC3BM,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EADgB,CAEhB;AACA;;AACA,SAAKC,YAAL,CAAkBC,KAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS,KAAKD,KAAL,CAAWE,IADpB,gBACoC,KAAKF,KAAL,CAAWG,GAD/C,gBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,KAAL,CAAWI,QAAf,CAJJ,EAKI;AACI,MAAA,GAAG,EAAGC,OAAD,IAAa;AAAC,aAAKR,YAAL,GAAoBQ,OAApB;AAA4B,OADnD;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,OAHzB;AAII,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,IAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAaH;;AAvB0B;;AA0B/BT,MAAM,CAACc,SAAP,GAAmB;AACfC,EAAAA,KAAK,EAAElB,SAAS,CAACmB,IADF;AAEfP,EAAAA,IAAI,EAAEZ,SAAS,CAACoB,MAFD;AAGfP,EAAAA,GAAG,EAAEb,SAAS,CAACqB,MAHA;AAIfL,EAAAA,OAAO,EAAEhB,SAAS,CAACmB;AAJJ,CAAnB;AAOA,eAAejB,SAAS,CAACC,MAAD,EAASF,OAAO,CAACE,MAAjB,CAAxB;AAEA","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types'\n\nimport classes from './Person.css';\nimport withClass from '../../../hoc/withClass';\n\nclass Person extends Component {\n    componentDidMount() {\n        console.log('[Person.js] componentDidMount');\n        // This will give focus to the first input in the element.\n        //document.querySelector('input').focus();\n        this.inputElement.focus();\n    }\n\n    render() {\n        console.log('[Person.js] rendering...')\n        return (\n            <Fragment>\n                <p  onClick={this.props.clicked}>\n                    I'm {this.props.name} and I am {this.props.age} years old!\n                </p>\n                <p>{this.props.children}</p> \n                <input\n                    ref={(inputEl) => {this.inputElement = inputEl}}\n                    type=\"text\"  \n                    onChange={this.props.changed} \n                    value={this.props.name}/>\n            </Fragment>\n        )\n    }\n}\n\nPerson.propTypes = {\n    click: PropTypes.func,\n    name: PropTypes.string,\n    age: PropTypes.number,\n    changed: PropTypes.func\n};\n\nexport default withClass(Person, classes.Person);\n\n/*\nclass Person extends Component {\n    render() {\n        return (\n            <div>\n                <p>I'm {this.props.name} and I am {this.props.age} years old!</p>\n                <p>{this.props.children}</p>\n            </div>\n        )\n    \n    }\n}\nexport default Person;\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}