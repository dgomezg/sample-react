{"ast":null,"code":"var _jsxFileName = \"/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: 'David',\n        age: 44\n      }, {\n        name: 'Cris',\n        age: 41\n      }, {\n        name: 'Alonso',\n        age: 7\n      }, {\n        name: 'Helena',\n        age: 4\n      }],\n      showPersons: false\n    };\n\n    this.switchNameHandler = (newName, newAge) => {\n      //DON'T DO THIS: personsState.persons[0].name = \"David G.\"\n      let newPersons = [...this.state.persons];\n      newPersons[1].name = newName;\n      newPersons[1].age = newAge;\n      this.setState({\n        persons: newPersons\n      });\n    };\n\n    this.nameChangeHandler = event => {\n      let newPersons = [...this.state.persons];\n      newPersons[1].name = event.target.value;\n      this.setState({\n        persons: newPersons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.persons.map(person => {\n        return React.createElement(Person, {\n          name: person.name,\n          age: person.age,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      }), React.createElement(Person, {\n        name: this.state.persons[0].name,\n        age: this.state.persons[0].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Person, {\n        changed: this.nameChangeHandler,\n        name: this.state.persons[1].name,\n        age: this.state.persons[1].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Person, {\n        click: this.switchNameHandler.bind(this, 'Cris!', 39),\n        name: this.state.persons[2].name,\n        age: this.state.persons[2].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"MyHobbies: bikes, football and playing drums.\"), React.createElement(Person, {\n        name: this.state.persons[3].name,\n        age: this.state.persons[3].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"This is really working\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Show/Hide persons\"), persons);\n  }\n\n}\n\nexport default App;\n/*\nconst App = props => {\n\n  const [personsState, setPersonsState] = useState({\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ]\n  });\n\n  const [otherState, setOtherState] = useState('some other value')\n  console.log(personsState, otherState);\n\n  const switchNameHandler = () => {\n    let newPersons = [...personsState.persons]\n    newPersons[0].name= \"David G.\"\n    newPersons[1].name=\"Cristina\"\n    newPersons[1].age=40 \n    setPersonsState({persons: newPersons});\n  }\n  \n  return (\n    <div className=\"App\">\n    <h1>Hi, I'm a React App</h1>\n    <p>This is really working</p>\n    <button onClick={switchNameHandler}>Switch name</button>\n\n    <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n    <Person name={personsState.persons[1].name} age={personsState.persons[1].age}/>\n    <Person name={personsState.persons[2].name} age={personsState.persons[2].age}/>\n    <Person name={personsState.persons[3].name} age={personsState.persons[3].age}/>\n  </div>    \n  )\n}\n\nexport default App;\n*/\n\n/*\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Hi, I'm a React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n*/","map":{"version":3,"sources":["/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/App.js"],"names":["React","Component","Person","App","state","persons","name","age","showPersons","switchNameHandler","newName","newAge","newPersons","setState","nameChangeHandler","event","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","map","person","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ], \n    showPersons: false\n  }\n\n  switchNameHandler = (newName, newAge) => {\n    //DON'T DO THIS: personsState.persons[0].name = \"David G.\"\n    let newPersons = [...this.state.persons]\n    newPersons[1].name=newName\n    newPersons[1].age=newAge \n    this.setState({persons: newPersons});\n  }\n\n  nameChangeHandler = (event) => {\n    let newPersons = [...this.state.persons]\n    newPersons[1].name=event.target.value\n    this.setState({persons: newPersons});\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render() {\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px', \n      cursor: 'pointer'\n    }\n\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map(person => {\n            return (<Person \n              name={person.name} \n              age={person.age}/>\n            );\n          })}\n          <Person \n            name={this.state.persons[0].name} \n            age={this.state.persons[0].age}/>\n          <Person changed={this.nameChangeHandler}\n            name={this.state.persons[1].name} \n            age={this.state.persons[1].age}/>\n          <Person click={this.switchNameHandler.bind(this, 'Cris!', 39)}\n            name={this.state.persons[2].name} \n            age={this.state.persons[2].age}>\n              MyHobbies: bikes, football and playing drums.\n          </Person>\n          <Person \n            name={this.state.persons[3].name} \n            age={this.state.persons[3].age}/>\n        </div> \n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}>Show/Hide persons</button>\n        {persons}\n      </div>\n    );  \n  }\n}\nexport default App;\n/*\nconst App = props => {\n\n  const [personsState, setPersonsState] = useState({\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ]\n  });\n\n  const [otherState, setOtherState] = useState('some other value')\n  console.log(personsState, otherState);\n\n  const switchNameHandler = () => {\n    let newPersons = [...personsState.persons]\n    newPersons[0].name= \"David G.\"\n    newPersons[1].name=\"Cristina\"\n    newPersons[1].age=40 \n    setPersonsState({persons: newPersons});\n  }\n  \n  return (\n    <div className=\"App\">\n    <h1>Hi, I'm a React App</h1>\n    <p>This is really working</p>\n    <button onClick={switchNameHandler}>Switch name</button>\n\n    <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n    <Person name={personsState.persons[1].name} age={personsState.persons[1].age}/>\n    <Person name={personsState.persons[2].name} age={personsState.persons[2].age}/>\n    <Person name={personsState.persons[3].name} age={personsState.persons[3].age}/>\n  </div>    \n  )\n}\n\nexport default App;\n*/\n\n\n/*\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Hi, I'm a React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}