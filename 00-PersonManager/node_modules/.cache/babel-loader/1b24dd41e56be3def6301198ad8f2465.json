{"ast":null,"code":"import _defineProperty from \"/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/containers/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asd',\n        name: 'David',\n        age: 44\n      }, {\n        id: 'fdas',\n        name: 'Cris',\n        age: 41\n      }, {\n        id: 'rqwe',\n        name: 'Alonso',\n        age: 7\n      }, {\n        id: 'fsgd',\n        name: 'Helena',\n        age: 4\n      }],\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n\n      const person = _objectSpread({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const newPersons = [...this.state.persons];\n      newPersons[personIndex] = person;\n      this.setState({\n        persons: newPersons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, persons);\n  }\n\n}\n\nexport default App;\n/*\nconst App = props => {\n\n  const [personsState, setPersonsState] = useState({\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ]\n  });\n\n  const [otherState, setOtherState] = useState('some other value')\n  console.log(personsState, otherState);\n\n  const switchNameHandler = () => {\n    let newPersons = [...personsState.persons]\n    newPersons[0].name= \"David G.\"\n    newPersons[1].name=\"Cristina\"\n    newPersons[1].age=40 \n    setPersonsState({persons: newPersons});\n  }\n  \n  return (\n    <div className=\"App\">\n    <h1>Hi, I'm a React App</h1>\n    <p>This is really working</p>\n    <button onClick={switchNameHandler}>Switch name</button>\n\n    <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n    <Person name={personsState.persons[1].name} age={personsState.persons[1].age}/>\n    <Person name={personsState.persons[2].name} age={personsState.persons[2].age}/>\n    <Person name={personsState.persons[3].name} age={personsState.persons[3].age}/>\n  </div>    \n  )\n}\n\nexport default App;\n*/\n\n/*\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Hi, I'm a React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n*/","map":{"version":3,"sources":["/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/containers/App.js"],"names":["React","Component","classes","Persons","App","state","persons","id","name","age","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangeHandler","event","findIndex","p","person","target","value","newPersons","togglePersonsHandler","doesShow","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAG,CACR;AAACC,QAAAA,EAAE,EAAC,KAAJ;AAAWC,QAAAA,IAAI,EAAE,OAAjB;AAA0BC,QAAAA,GAAG,EAAE;AAA/B,OADQ,EAER;AAACF,QAAAA,EAAE,EAAC,MAAJ;AAAYC,QAAAA,IAAI,EAAE,MAAlB;AAA0BC,QAAAA,GAAG,EAAE;AAA/B,OAFQ,EAGR;AAACF,QAAAA,EAAE,EAAC,MAAJ;AAAYC,QAAAA,IAAI,EAAE,QAAlB;AAA4BC,QAAAA,GAAG,EAAE;AAAjC,OAHQ,EAIR;AAACF,QAAAA,EAAE,EAAC,MAAJ;AAAYC,QAAAA,IAAI,EAAE,QAAlB;AAA4BC,QAAAA,GAAG,EAAE;AAAjC,OAJQ,CADJ;AAONC,MAAAA,WAAW,EAAE;AAPP,KADkB;;AAAA,SAW1BC,mBAX0B,GAWHC,WAAD,IAAiB;AACrC;AACA,YAAMN,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AACAA,MAAAA,OAAO,CAACO,MAAR,CAAeD,WAAf,EAA4B,CAA5B;AACA,WAAKE,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEA;AAAV,OAAd;AAED,KAjByB;;AAAA,SAmB1BS,iBAnB0B,GAmBN,CAACC,KAAD,EAAQT,EAAR,KAAe;AAEjC,YAAMK,WAAW,GAAG,KAAKP,KAAL,CAAWC,OAAX,CAAmBW,SAAnB,CAA8BC,CAAC,IAAI;AACrD,eAAOA,CAAC,CAACX,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB;;AAGA,YAAMY,MAAM,qBAAO,KAAKd,KAAL,CAAWC,OAAX,CAAmBM,WAAnB,CAAP,CAAZ;;AACAO,MAAAA,MAAM,CAACX,IAAP,GAAcQ,KAAK,CAACI,MAAN,CAAaC,KAA3B;AAEA,YAAMC,UAAU,GAAG,CAAC,GAAG,KAAKjB,KAAL,CAAWC,OAAf,CAAnB;AACAgB,MAAAA,UAAU,CAACV,WAAD,CAAV,GAA0BO,MAA1B;AACA,WAAKL,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEgB;AAAV,OAAd;AACD,KA9ByB;;AAAA,SAgC1BC,oBAhC0B,GAgCH,MAAM;AAC3B,YAAMC,QAAQ,GAAG,KAAKnB,KAAL,CAAWK,WAA5B;AACA,WAAKI,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAE,CAACc;AAAf,OAAd;AACD,KAnCyB;AAAA;;AAqC1BC,EAAAA,MAAM,GAAG;AACP,QAAInB,OAAO,GAAG,IAAd;;AAGA,QAAI,KAAKD,KAAL,CAAWK,WAAf,EAA4B;AAC1BJ,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADtB;AAEE,QAAA,OAAO,EAAE,KAAKK,mBAFhB;AAGE,QAAA,OAAO,EAAE,KAAKI,iBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;AAGD,WACE;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,OADH,CADF;AAKD;;AA5DyB;;AA8D5B,eAAeF,GAAf;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\n\nclass App extends Component {\n  state = {\n    persons : [\n      {id:'asd', name: 'David', age: 44},\n      {id:'fdas', name: 'Cris', age: 41},\n      {id:'rqwe', name: 'Alonso', age: 7},\n      {id:'fsgd', name: 'Helena', age: 4}\n    ], \n    showPersons: false\n  }\n\n  deletePersonHandler = (personIndex) => {\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons})\n\n  } \n\n  nameChangeHandler = (event, id) => {\n\n    const personIndex = this.state.persons.findIndex( p => {\n      return p.id === id;\n    });\n    const person = {...this.state.persons[personIndex]};\n    person.name = event.target.value;\n\n    const newPersons = [...this.state.persons]\n    newPersons[personIndex] = person\n    this.setState({persons: newPersons});\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render() {\n    let persons = null;\n    \n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          <Persons \n            persons={this.state.persons}\n            clicked={this.deletePersonHandler}\n            changed={this.nameChangeHandler} />\n        </div> \n      );\n\n\n    }\n\n\n    return (\n      <div className={classes.App}>\n        {persons}\n      </div>\n    );  \n  }\n}\nexport default App;\n/*\nconst App = props => {\n\n  const [personsState, setPersonsState] = useState({\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ]\n  });\n\n  const [otherState, setOtherState] = useState('some other value')\n  console.log(personsState, otherState);\n\n  const switchNameHandler = () => {\n    let newPersons = [...personsState.persons]\n    newPersons[0].name= \"David G.\"\n    newPersons[1].name=\"Cristina\"\n    newPersons[1].age=40 \n    setPersonsState({persons: newPersons});\n  }\n  \n  return (\n    <div className=\"App\">\n    <h1>Hi, I'm a React App</h1>\n    <p>This is really working</p>\n    <button onClick={switchNameHandler}>Switch name</button>\n\n    <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n    <Person name={personsState.persons[1].name} age={personsState.persons[1].age}/>\n    <Person name={personsState.persons[2].name} age={personsState.persons[2].age}/>\n    <Person name={personsState.persons[3].name} age={personsState.persons[3].age}/>\n  </div>    \n  )\n}\n\nexport default App;\n*/\n\n\n/*\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Hi, I'm a React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}