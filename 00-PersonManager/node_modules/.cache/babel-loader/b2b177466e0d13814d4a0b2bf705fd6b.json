{"ast":null,"code":"var _jsxFileName = \"/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asd',\n        name: 'David',\n        age: 44\n      }, {\n        id: 'fdas',\n        name: 'Cris',\n        age: 41\n      }, {\n        id: 'rqwe',\n        name: 'Alonso',\n        age: 7\n      }, {\n        id: 'fsgd',\n        name: 'Helena',\n        age: 4\n      }],\n      showPersons: false\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      let newPersons = [...this.state.persons];\n      newPersons[1].name = event.target.value;\n      this.setState({\n        persons: newPersons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          key: person.id,\n          click: this.deletePersonHandler.bind(this, index),\n          changed: event => this.nameChangeHandler(event, person.id),\n          name: person.name,\n          age: person.age,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"This is really working\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Show/Hide persons\"), persons);\n  }\n\n}\n\nexport default App;\n/*\nconst App = props => {\n\n  const [personsState, setPersonsState] = useState({\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ]\n  });\n\n  const [otherState, setOtherState] = useState('some other value')\n  console.log(personsState, otherState);\n\n  const switchNameHandler = () => {\n    let newPersons = [...personsState.persons]\n    newPersons[0].name= \"David G.\"\n    newPersons[1].name=\"Cristina\"\n    newPersons[1].age=40 \n    setPersonsState({persons: newPersons});\n  }\n  \n  return (\n    <div className=\"App\">\n    <h1>Hi, I'm a React App</h1>\n    <p>This is really working</p>\n    <button onClick={switchNameHandler}>Switch name</button>\n\n    <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n    <Person name={personsState.persons[1].name} age={personsState.persons[1].age}/>\n    <Person name={personsState.persons[2].name} age={personsState.persons[2].age}/>\n    <Person name={personsState.persons[3].name} age={personsState.persons[3].age}/>\n  </div>    \n  )\n}\n\nexport default App;\n*/\n\n/*\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Hi, I'm a React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n*/","map":{"version":3,"sources":["/Users/davidgomez/projects/sandbox/react/training/react-complete-guide/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","showPersons","deletePersonHandler","personIndex","splice","setState","nameChangeHandler","event","findIndex","p","newPersons","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","map","person","index","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons : [\n      {id:'asd', name: 'David', age: 44},\n      {id:'fdas', name: 'Cris', age: 41},\n      {id:'rqwe', name: 'Alonso', age: 7},\n      {id:'fsgd', name: 'Helena', age: 4}\n    ], \n    showPersons: false\n  }\n\n  deletePersonHandler = (personIndex) => {\n    //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons})\n\n  } \n\n  nameChangeHandler = (event, id) => {\n\n    const personIndex = this.state.persons.findIndex( p => {\n      return p.id === id;\n    });\n\n    let newPersons = [...this.state.persons]\n    newPersons[1].name=event.target.value\n    this.setState({persons: newPersons});\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n  }\n\n  render() {\n\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px', \n      cursor: 'pointer'\n    }\n\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person,index) => {\n            return (\n              <Person key={person.id}\n                click={this.deletePersonHandler.bind(this, index)}\n                changed={(event) => this.nameChangeHandler(event, person.id)}\n                name={person.name} \n                age={person.age}\n              />\n            );\n          })}\n        </div> \n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working</p>\n        <button \n          style={style}\n          onClick={this.togglePersonsHandler}>Show/Hide persons</button>\n        {persons}\n      </div>\n    );  \n  }\n}\nexport default App;\n/*\nconst App = props => {\n\n  const [personsState, setPersonsState] = useState({\n    persons : [\n      {name: 'David', age: 44},\n      {name: 'Cris', age: 41},\n      {name: 'Alonso', age: 7},\n      {name: 'Helena', age: 4}\n    ]\n  });\n\n  const [otherState, setOtherState] = useState('some other value')\n  console.log(personsState, otherState);\n\n  const switchNameHandler = () => {\n    let newPersons = [...personsState.persons]\n    newPersons[0].name= \"David G.\"\n    newPersons[1].name=\"Cristina\"\n    newPersons[1].age=40 \n    setPersonsState({persons: newPersons});\n  }\n  \n  return (\n    <div className=\"App\">\n    <h1>Hi, I'm a React App</h1>\n    <p>This is really working</p>\n    <button onClick={switchNameHandler}>Switch name</button>\n\n    <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n    <Person name={personsState.persons[1].name} age={personsState.persons[1].age}/>\n    <Person name={personsState.persons[2].name} age={personsState.persons[2].age}/>\n    <Person name={personsState.persons[3].name} age={personsState.persons[3].age}/>\n  </div>    \n  )\n}\n\nexport default App;\n*/\n\n\n/*\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Hi, I'm a React App</h1>\n    </div>\n  );\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}